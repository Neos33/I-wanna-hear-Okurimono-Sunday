<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init everything
global.currentAvoidance = self;
global.noPause = true;

attackS9_list = noone;
attackS9_index = 0;


// Init Timer
realTime = 0;
t = global.startPosition;
if global.startPosition == 0
{
    global.startSegment = 0;
    global.currentSegment = global.startSegment;
    event_user(0); //create star begin
}
    

// Local Variables
pX = 400;
pY = 64;
alarm[5] = 2; //Hide "4 5 6" message with cherrys
counter = 0;
borders = true;
theAngle = 0;
alphaText = 1;
tt = 0;
tempData = 0;
tempColorData = c_white;


// Background Colors
bgCol[0] = make_colour_rgb(254, 254, 234); //white
bgCol[1] = make_colour_rgb(69, 180, 207); //blue
bgCol[2] = make_colour_rgb(73, 143, 143); //dark green
bgCol[3] = make_colour_rgb(48, 97, 154); //dark blue
bgCol[4] = make_colour_rgb(244, 195, 190);
bgCol[5] = make_colour_rgb(83, 100, 133); //dark blue after the rectangles transition
bgCol[6] = make_colour_rgb(132, 253, 246); //cyan
bgCol[7] = make_colour_rgb(253,225,110); //yellow
bgCol[8] = make_colour_rgb(169,80,85); //red
bgCol[9] = make_colour_rgb(253,225,60); //yellow
bgCol[10] = make_colour_rgb(83,162,196); //aqua (coffe scene)
bgCol[11] = make_colour_rgb(148,239,238);
bgCol[12] = make_colour_rgb(253,220,208);

background_colour = bgCol[0];


/// Hide the tiles for the segment 5 (rotation) effect
tile_layer_hide(10000);
tile_layer_hide(10001);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete BG and Zea if option is disabled (TEST ONLY)


if !global.normalPerformance
{
    //instance_destroy(objZeaCornelia);
    //instance_destroy(objZeaCorneliaShows);
    
    for (var i=0; i&lt;=7; i++)
        background_visible[i] = false;
}
else
    instance_create(0,0,objAvoidancePerformanceController);

// Show timer
if global.infoTimer != 0
    instance_create(0,0,objClockTimer);

// Autosave
alarm[11] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set ZEA sprites
if global.startPosition != 0
{
    if global.startPosition &gt; 0 and global.startPosition &lt; 2400 or
       global.startPosition &gt;= 6062 and global.startPosition &lt; 6873 or
       global.startPosition &gt;= 8770 and global.startPosition &lt; 10000 
    {
        practiceZEASpriteStart(true);
    }
    
    if global.startPosition &gt;= 2400 and global.startPosition &lt; 6062 or
       global.startPosition &gt;= 6873 and global.startPosition &lt; 8770 
    {
        practiceZEASpriteStart(false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changes when you start a segment from practice mode

switch (global.startPosition)
{
    case 2406:
    case 3100:
        background_colour = make_colour_rgb(132,202,202);
        scrBGSettings(5, bgGridShape2, 0, 0, 1, 1, 0, 0, 1, c_white, 0.4, 0);
    break;
    
    case 6062:
        background_colour = bgCol[2];
        with objZeaCornelia { sprite_index = sprZeaCut; }
        scrBGSettings(5, bgGridShape1B, 0, 0, 1, 1, 0, 0, 1, c_white, 0.4, 0);
    break;
    
    case 7621:
        background_colour = bgCol[10];
        scrBGSettings(5, bgGridShape1B, 0, 0, 1, 1, 0, 0, 1, c_white, 0.4, 0);
    break;
    
    case 9100:
        background_colour = make_colour_rgb(182, 153, 249);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Autosave setup
if global.saveOnBoss and global.saveOnBoss_Once
{
    scrSaveGame(true);
    global.saveOnBoss_Once = false;
    show_debug_message("AutoSave made his action only once");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///First attack (Segment 0)
ic(32 + irandom(736), 48, objS0_Wabble);

alarm[6] = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deactivate 2 frames later (For Segment 7)
instance_deactivate_object(objS7_FormNumbers);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spiral attack after warning (Segment 8)
for (var i = 0; i &lt; 360; i += 360 / 4)
{
    var sss = ic(400, 304, objS8_NormalCherry);
    sss . sprite_index = sprCherrySolid1_Mini;
    sss . direction = i + counter;
    sss . speed = 1 + counter / 11;
    sss . image_blend = make_colour_hsv(tempColorData, 95 + counter, 255);
    
    
    var sss = ic(400, 304, objS8_NormalCherry);
    sss . sprite_index = sprCherrySolid1_Mini;
    sss . direction = i - counter;
    sss . speed = 1 + counter / 11;
    sss . image_blend = make_colour_hsv(tempColorData, 95 + counter, 255);
}


alarm[4] = 5;
counter += 10;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn cherry on top or bottom (Segment 8)
// Top
var s = ic(400 + irandom_range(-128, 128), 48, objCherry);
s . speed = 3;
s . direction = irandom_range(260, 280);
s . sprite_index = sprCherrySolid1;
s . image_speed = 0;
s . image_blend = make_colour_hsv(irandom_range(80, 120), 140, 255);

// Bottom
s = ic(400 + irandom_range(-128, 128), 560, objCherry);
s . speed = 3;
s . direction = irandom_range(80, 100);
s . sprite_index = sprCherrySolid1;
s . image_speed = 0;
s . image_blend = make_colour_hsv(irandom_range(80, 120), 140, 255);

alarm[3] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Random attack from the sides on lyrics segment (Segment 4)

var s = ic(400 + 400 * counter, irandom_range(64, 544), objS4_CherryMove3D);
s . speed = irandom_range(3, 6);

if counter == 1
    s . direction = irandom_range(160, 200);
else
    s . direction = irandom_range(-20, 20);
    
alarm[2] = 14;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create line attacks (Segment 6)
var ss = instance_create(irandom(800), 32, objS6_LineA);
ss . vspeed = irandom_range(3, 5);
ss . alarm[0] = 1;

alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Empty
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///"Practice mode" alpha tezt Oscillate
if !global.practiceMode { exit; }

alphaText = 0.75 + scrTOscillate(0.25,40,20);
tt++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>---- Controller settings ----</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player and Song Setup
if instance_exists(objPlayer)
{
    if t &lt; 10267
        scrAvoidanceSync(global.currentMusic);
}
else
{
    t = -1;
    instance_destroy(objAvoidancePerformanceController);
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Keys
if global.debugMode
{
    var key_record = scrButtonPressed(ord("S"));
    var key_roomMaxSpeed = scrButtonHeld(ord("F"));
    var key_setStart = scrButtonPressed(ord("T"));
    
    var key_Step1000 = scrButtonPressed(ord("1"));
    var key_Step2000 = scrButtonPressed(ord("2"));
    var key_Step3000 = scrButtonPressed(ord("3"));
    var key_Step4000 = scrButtonPressed(ord("4"));
    var key_Step5000 = scrButtonPressed(ord("5"));
    var key_Step6000 = scrButtonPressed(ord("6"));
    var key_Step7000 = scrButtonPressed(ord("7"));
    var key_Step8000 = scrButtonPressed(ord("8"));
    var key_Step9000 = scrButtonPressed(ord("9"));
    var key_RestartStep = scrButtonPressed(ord("0"));

    if key_setStart
    {
        global.startPosition = get_integer("Select a Start position [0 to 10267] - (previous start was "+string(global.startPosition)+")", "");
        t = global.startPosition;
        instance_destroy(objS0Transition_StarFG);
    }
    
    if key_record
        show_debug_message("case "+string(t)+":");
        
    if key_roomMaxSpeed
        room_speed = 1000;
    else
        room_speed = 50;
        
    if key_Step1000 { t = 1498; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step2000 { t = 2000; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step3000 { t = 3000; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step4000 { t = 4500; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step5000 { t = 5350; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step6000 { t = 6000; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step7000 { t = 7000; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step8000 { t = 8250; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_Step9000 { t = 9000; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
    if key_RestartStep { t = 0; global.startPosition = t; instance_destroy(objS0Transition_StarFG); }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update segments
if global.hitMode
{
    switch (t)
    {
        case 1000: global.currentSegment = 1; global.segmentData = 0; break;
        case 2000: global.currentSegment = 2; global.segmentData = 0; break;
        case 3000: global.currentSegment = 3; global.segmentData = 0; break;
        case 4500: global.currentSegment = 4; global.segmentData = 1; break;
        case 5350: global.currentSegment = 5; global.segmentData = 1; break;
        case 6000: global.currentSegment = 6; global.segmentData = 1; break;
        case 7000: global.currentSegment = 7; global.segmentData = 1; break;
        case 8374: global.currentSegment = 8; global.segmentData = 2; break;
        case 9100: global.currentSegment = 9; global.segmentData = 2; break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>----- Visuals ----- </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Visuals) - 0 to 4000 

switch (t)
{
    // Star goes outside one per one
    case 38:
    case 47:
    case 58:
    case 66:
    case 76:
    case 88:
        with objS0Transition_StarFG
        {
            if other.counter == tag
                alarm[0] = 1;
        }
        
        counter++;
    break;
    // DEBUG ONLY
    //case 1: with objZeaCorneliaShows { event_user(0); } break;
    /*case 2: //784
        with objZeaCorneliaShows { appear = true; }
    break;*/
    // Zea Appears on a line spawn effect
    
    case 119: with objZeaCorneliaShows { event_user(0); } break;
    case 120: //784
        with objZeaCorneliaShows { appear = true; }
    break;
    
    // A rectangle layer over the screen
    case 785:
        instance_create(0, 0, objTransitionBG_1);
    break;
    
    // Same as before but with a windows this time
    case 1200:
        instance_create(0, 0, objTransitionBG_2);
    break;
    
    // Create a octagon and stay on the screen
    case 1499:
        instance_destroy(objTransitionBG_1);
        instance_destroy(objTransitionBG_2);
        with objS1_SemiCricle { alarm[1] = 0; };
        with objPlayerKiller { mask_index = sprNull; }
        
        var obj = instance_create(-128, -224, objTransitionOctagon);
        obj . sprite_index = sprOctagon2;
        obj . image_blend = make_colour_rgb(20, 196, 144);
        obj . image_angle = 270;
        obj . image_xscale = 11 / 2;
        obj . image_yscale = 11 / 2;
        obj . depth = -40;
    break;
    
    case 1500:
        if instance_exists(objPlayer)
        {
            inviPlayer(false); 
            with (objPlayer) { frozen = true; }
            
            var pathKid = ic(objPlayer.x, objPlayer.y, objPlayerMoveNextPath);
            pathKid . targetX = objPlayer.x;
            pathKid . targetY = 119 + 8;
            pathKid . image_xscale = objPlayer.xScale;
            pathKid . vspeed = -2;
            pathKid . alarm[0] = 35;
            if objPlayer.xScale == 1
                pathKid . reverse = 1;
            else
                pathKid . reverse = -1;
        }
    break;
    
    // Octagon goes away and Zea shows up
    case 1619: 
        instance_destroy(objPlayerKiller);
        instance_destroy(objPlayerMoveNextPath);
        
        // Create platform and move player on top of that
        ic(0, 128, objS3_Platform);
        with (objPlayer) { y = 119; frozen = false; }
        inviPlayer(true); 
        
        
        with (objTransitionOctagon) { alarm[0] = 1; depth = -10; }
        background_colour = bgCol[0];
        background_visible[5] = false;
        //with objZeaCornelia { sprite_index = sprZeaCut; visible = 0;}
        //if global.normalPerformance
          //  background_visible[0] = true;
            
        with (objZeaCornelia) 
        {
            sprite_index = sprZeaCut;
            visible = true;
        }
    break;
    
    // Create a similar Octagon behaviour but this time is it a Star sprite
    case 2356:
        instance_destroy(objTransitionOctagon);
        var obj = instance_create(-464, -608, objTransitionOctagon);
        obj . angleSPD = 0.1;
        obj . image_blend = make_colour_rgb(254, 254, 74);
        obj . sprite_index = sprStarPointless_nocenter;
        obj . image_angle = 270;
        obj . image_xscale = 3.25;
        obj . image_yscale = 3.25;
        obj . depth = -40;
        
        with objS3_gravCherryCreater { alarm[0] = 0; }
        with objS3_gravCherry { mask_index = sprNull; }
    break;
    
    case 2357:
        if instance_exists(objPlayer)
        {
            inviPlayer(false); 
            with (objPlayer) { frozen = true; }
            
            var pathKid = ic(objPlayer.x, objPlayer.y, objPlayerMoveNextPath);
            pathKid . targetX = objPlayer.x;
            pathKid . targetY = 535 + 8;
            pathKid . image_xscale = objPlayer.xScale;
            pathKid . vspeed = -2;
            pathKid . alarm[0] = 15;
            
            if objPlayer.xScale == 1
                pathKid . reverse = 1;
            else
                pathKid . reverse = -1;
        }
    break;
    
    // Star goes away
    case 2400: 
        with (objTransitionOctagon) { alarm[0] = 1; depth = -10; } 
        instance_destroy(objS3_Platform);
        instance_destroy(objPlayerMoveNextPath);
        inviPlayer(true); 
        with objPlayer { y = 533; frozen = false; }
        
        background_colour = make_colour_rgb(132, 202, 202);
        with (objZeaCornelia) 
        {
            appear = false;
            sprite_index = sprZeaCut;
            visible = false;
        }
    break;
    

    /*
    // Circle colors
    case 3694: counter = 0; break;
    case 3695:
    case 3741:
        if global.normalPerformance
        {
            var hueRNG = irandom(255);
            var s = ic(0,0,objBGCircleGradient);
            s . tag = counter;
            s . col1 = make_colour_hsv(hueRNG, 140, 250);
            s . col2 = make_colour_hsv(hueRNG, 220, 250);
            s . depth = 1000700-counter;
        }
        counter++;
    break;
    
    case 3781: if global.normalPerformance {with (objBGCircleGradient) { if tag == 0 instance_destroy(); }} break;
    */
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Visuals) - 4000 to 8000

switch (t)
{
    // Background effect like sasanoke area(SZ3) or orion 
    case 4252:
        instance_create(0, -216, objTransitionBG_OrionEffect);

    break;
    
    /*case 4400:
        with objLightManager { fadeOut = true;}
    break;
    */ 
    //case 4405:
    case 4427:
        var obj = instance_create(0, 64, objEffSquareAngle01);
        obj . image_angle = 270;
        obj . targetAngle = 360;
        obj . image_xscale = 12.50;
        obj . image_yscale = 18;
        obj . image_blend = make_colour_rgb(186, 48, 39);
        
        obj = instance_create(800, 64, objEffSquareAngle01);
        obj . image_angle = 90;
        obj . image_xscale = -12.50;
        obj . image_yscale = 18;
        obj . image_blend = make_colour_rgb(186,48,39);
        
    
        //with objEffSquareAngle01 { event_user(0); }
        ic(2000,-100,objCupLyric);
    break;
    
    //case 4437:
    case 4428:
        ic(100, -100, objLetters_TIG);
        
        //ic(800,-100,objCupLyric);
        //ic(470,-100,objLetters_TIG);
    break;
    
    // Another transition with split the rectangles angles
    //case 4457:
    case 4486:
        with objCupLyric { event_user(0); }
        instance_destroy(objS4_StarAttach);
        instance_destroy(objEffSquareAngle01);
        instance_destroy(objS4_AttackPattern5_Star);
        instance_destroy(objCherry);
        instance_destroy(objS4_ShapeDecompress);
        instance_destroy(objS4_ShapeDecompress_Owner);
        
        var obj = instance_create(400, 544, objEffSquareAngle01);
        obj . image_angle = 180;
        obj . targetAngle = 270;
        obj . image_xscale = 12.50;
        obj . image_yscale = 20;
        obj . image_blend = make_colour_rgb(186, 48, 39);
        
        obj = instance_create(400, 544, objEffSquareAngle01);
        obj . image_angle = 180;
        obj . targetAngle = 90;
        obj . image_xscale = -12.50;
        obj . image_yscale = 20;
        obj . image_blend = make_colour_rgb(186, 48, 39);
        
        background_colour = bgCol[5];
        
    break;
    
    case 4487: 
        //ic(100,204,objLetters_HUG);
        
        ic(490, 204, objLetters_HUG);
        with objLetters_HUG { depth = 1000001; alarm[0] = 1000;}
        
        var s = ic(200, 304, objCherry);
        s . sprite_index = sprLetter;
        s . mask_index = sprNull;
        s . depth = 1000;
    break;
    
    // Prepare the lyrics transition section with a rectangle grid
    case 4536:
        instance_destroy(objEffSquareAngle01);
        instance_destroy(objS4_AttackPendulumMove);
        instance_create(400, 304, objTransition_prepare05);
    break;
    
    // Rectangle grid size out
    case 4641:
        instance_destroy(objTransition_prepare05);
        
        event_user(2);
        instance_destroy(objCherry);
        instance_destroy(objCupLyric);
        instance_destroy(objLetters_HUG);
        /*if global.normalPerformance // USE objBGDrawer LATER ON
        {
            //background_visible[6] = true; 
            //background_visible[7] = true; 
        
        
            var hueRNG = 102;
            var s = ic(0,0,objBGCircleGradient);
            s . col1 = make_colour_hsv(hueRNG, 140, 250);
            s . col2 = make_colour_hsv(hueRNG, 220, 250);
            s . depth = 1000700;
            s . rad = 470;
        }*/
        counter = choose(-1, 1);
        for (var i = -16; i &lt;= 816; i += 32)
        {
            // Top
            var spikeTop = ic(i, 80, objS4_Spike);
            spikeTop . image_angle = 270;
            spikeTop . spd = -2 * counter;
            
            // Bottom
            var spikeBottom = ic(i, 528, objS4_Spike);
            spikeBottom . image_angle = 90;
            spikeBottom . spd = -2 * counter;
        }
        
        
        // Create killers on top and bottom
        /*var s = ic(0,56,objKillerBlock);
        s . image_xscale = 25;
                
        s = ic(0,520,objKillerBlock);
        s . image_xscale = 25;*/
        
        // Move player at center
        with objPlayer { x = 400; y = 280; }
        var obj = instance_create(256, 288, objMovingPlatform);
        obj . image_xscale = 9;
        obj . depth = 500;
        
        background_colour = bgCol[6];
        
        ///////////////////////////////////////////
        //alarm[0] = 1;
    break;
    
    // Spawn text credits (Yeah in the middle of the song bc they did in the MV)
    // Create the text (1st one)
    case 4680: 
        var obj = instance_create(0, 0, objTextMiddleCredits);
        obj . textAvaibled[0] = true;
        //obj . textAvaibled[1] = true;
    break;
    
    // Change the text (to 2nd one)
    case 5020:
        with objTextMiddleCredits 
        { 
            textAvaibled[0] = false;
            textAvaibled[1] = true;
        }

    break;
    
    // Spawn a square again
    case 5355:
        var obj = instance_create(0, 0, objTransitionBG_1);
        obj . spd = -16;
        obj . bgCol = make_colour_rgb(113, 136, 210);
        obj . state = 1;
        obj . depth = -100;
        
        tile_layer_hide(-101);
    break;
    
    case 5500:
        tempData = choose(-1, 1);
        var rotateSign = ic(400, 304, objRotationSign);
        rotateSign . image_xscale = tempData;
        rotateSign . image_angle = 180 * tempData;
    break;
    
    // Create the view rotate setup
    case 5568:
        ic(0, 0, objRotateView);
        with objS5_LightsLaser { moving = true; reverse = -other.tempData; }
        with objPatBall_circleDecoration { rotate = true; rotateSPD = 2 * -other.tempData }
    break;
    
    // Rotate the view 90s degrees
    case 5569:
    case 5619:
        with (objRotateView) { targetAngle += 90 * other.tempData; step = 0; }
        with (objBGOrionRotationSegment) 
        { 
            if other.tempData = -1 { rightSide = false; }
            moving += 1;
            moving %= 2;
        }
            
    break;
    
    case 5748: 
        // Get a color
        var rngHue = irandom(255);
        tempColorData = make_colour_hsv(rngHue, 180, 255);
        
        
        var changeBG = ic(0,0,objBGChangeColour); 
        changeBG . hue = rngHue;
        
        with objPatBall_circleDecoration { colorTarget = make_colour_hsv(rngHue, 150, 255); }
        instance_destroy(objBGOrionRotationSegment); 
        
        with objS5_LightsLaser { alarm[0] = 1; } // Fade out
    break;
    
    /*case 5791:
        var caution = ic(400-224,304,objBeCareful);
        caution . delay = 10;
        caution . image_angle = 90;
        caution . image_xscale = .5;
        
        caution = ic(400+224,304,objBeCareful);
        caution . delay = 10;
        caution . image_angle = 270;
        caution . image_xscale = .5;
    break;*/
    
    // Take a screenshot and go to another layer room (and setups set to normal), Zea appears
    case 6062:
        instance_create(0, 0, objTakeScreenShot);
        instance_destroy(objBGTileShift);
        instance_destroy(objRotateView);
        instance_destroy(objS5_LightsLaser);
        
        view_angle[0] = 0;
        objPlayer.x = 400;
        objPlayer.y = 400;
        background_colour = bgCol[2];
        
        // Refresh blocks
        instance_destroy(objBlock);
        
        // Horizontal
        var block = ic(0, 32, objBlock);
        block . image_xscale = 25;
        
        block = ic(0, 544, objBlock);
        block . image_xscale = 25;
        
        // Vertical
        block = ic(-32, 32, objBlock);
        block . image_yscale = 17;
        
        block = ic(800, 32, objBlock);
        block . image_yscale = 17;
        
        instance_destroy(objPatBall_circleDecoration);
        instance_destroy(objPlayerRotation);
        instance_destroy(objS5_SansBonesAttack);
        instance_destroy(objPlayerKiller);
        
        with (objZeaCornelia) 
        {
            appear = false;
            sprite_index = sprZeaCut;
            visible = true;
        }
    break;
    
    // Spawn random waving stars on the background
    case 6063:
        repeat(12)
        {
            var s = ic(irandom_range(64, 800 - 64), irandom_range(80, 608 - 80), objStarOscilatte);
            s . image_blend = make_colour_hsv(irandom(255), 90, 245);
        }
    break;
    
    // Rectangle window transition Number. 2
    case 6827: var s = ic(0, 0, objTransitionBG_3); s . depth = -100; break;
    case 6873: with (objTransitionBG_3) { middle = false; } break;
    
    // Create a 2nd Orion effect after a rectangle transition
    case 6880: //IDK
        ic(0, -216 + 64, objTransitionBG_OrionEffect2);
    break;
    
    // Zea "WOO!" warning
    case 7017:
        var side;
        if instance_exists(objPlayer)
        {
            if objPlayer.x &lt; 400 
                side = 1;
            else
                side = -1;
        }
        
        var warning = ic(400 + 200 * side, 608 + 128, objCircleLightWarning);
        warning . vspeed = -6;
        warning . gravity = 0.1;
        warning . image_xscale = 5;
        warning . image_yscale = 5;
        warning . image_alpha = 0.6;
    break;
    
    // Zea saying "WOO!"
    case 7064: 
        if instance_exists(objCircleLightWarning)
        {
            var side;
            var pointX = objCircleLightWarning.x;
            if pointX &gt; 400 
                side = 1;
            else
                side = -1;
        
            var ss = ic(400 + 200 * side, 540, objZeaChibi);
            ss . image_xscale = side / 2;
            ss . image_yscale = .5;
        }
    break;
    
    case 7228:
        ic(80, 144, objScreenShotAgain_Improved);
        instance_destroy(objTransitionBG_OrionEffect2);
        instance_destroy(objStarOscilatte);
        instance_destroy(objLightPilar);
        instance_destroy(objAlg);
        instance_destroy(objPlayerKiller);
        /*instance_destroy(objS7_CherryZeaChibi);
        instance_destroy(objS6_CreateCursedFlower);
        instance_destroy(objS7_FlowerEffTouhou);
        instance_destroy(objS6_SparkCherry);*/
        background_colour = bgCol[10];
    break;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Visuals) - 8000 to 12000

switch (t)
{
    case 8190: ic(0, 0, objViewsController); break;
    
    case 8288: // Create transition split
        //ic(0,0,objSquareToSignINF); 
        
        with objS7_ShootedToCenter { mask_index = sprNull; } 
        
        for (var i = 0; i &lt; 360; i += 360 / 32)
        {
            var rot = ic(-10, -10, objInvisibleCherryToMark);
            rot . angle = i;
        }
        
        // Grid
        for (var i = 16; i &lt; 800; i += 64)
        {
            for (var j = 48; j &lt;= 560; j += 64)
            {
                ic(i, j, objRomboTransitionGrid);
                
                ic(i - 32, j - 32, objRomboTransitionGrid);
                
                ic(816, j - 32, objRomboTransitionGrid);
                
                
            }
            ic(i - 32, 528, objRomboTransitionGrid);
            
        }        
    break;
    
    case 8298: 
        tile_layer_hide(-101);
        borders = true;
        
    //case 8344: 
        if instance_exists(objPlayer)
        {
            inviPlayer(false); 
            with (objPlayer) { frozen = true; }
            
            var pathKid = ic(objPlayer.x, objPlayer.y, objPlayerMoveNextPath);
            pathKid . targetX = 400;
            pathKid . targetY = 304;
            pathKid . image_xscale = objPlayer.xScale;
            pathKid . vspeed = -2;
            pathKid . alarm[0] = 35;
            if objPlayer.xScale == 1
                pathKid . reverse = 1;
            else
                pathKid . reverse = -1;
        }
    break;
    
    case 8374: 
        event_user(5);
        /*background_visible[5] = false;
        var grid = ic(0,0,objBGDraw);
        grid . bg = bgGridShape4; //star grid shape
        grid . depth = 1000054;*/
        
        instance_destroy(objRomboTransitionGrid);
        instance_destroy(objInvisibleCherryToMark);
        instance_destroy(objBGCircleGradient);
        instance_destroy(objAlg); //Clean up
        
    break;
    
    // Move Kid to center
    case 8375:
        instance_destroy(objPlayerMoveNextPath);
        instance_destroy(objBGLayer_Drawer);
        with objZeaCornelia { visible = false; }
        event_user(6);
        
        if instance_exists(objPlayer)
        {
            objPlayer.x = 400;
            objPlayer.y = 295;
            objPlayer.frozen = false;
        }
        inviPlayer(true);
        
        var obj = ic(256, 304, objMovingPlatform);
        obj . image_xscale = 9;
        obj . depth = 500;
        
        // Background color
        background_colour = bgCol[11];
        
        // Create BG on the sides
        ic(0, 0, objBGDrawer2);
        
        // Zoom
        if instance_exists(objViewsController)
        {
            view_xview[0] = 200;
            view_yview[0] = 152;
            view_wview[0] = 400;
            view_hview[0] = 304;
        }
    break;
    
    case 8764:
        var line = ic(0, 0, objBGLineColorScaleOut);
        line . depth = 1000055;
        //background_colour = bgCol[12];
        background_colour = make_colour_rgb(182, 153, 249);
        
    break;
    case 8770: //WARNING the platform will be vanished
    
        with (objMovingPlatform) { warning = true; }
        ic(0, 0, objInfJumpSign);
        ic(400, 304 - 96, objBeCareful);
        ic(400, 304 + 96, objBeCareful);
        
        // ZEA's sprite fade in
        with (objZeaCornelia) 
        { 
            sprite_index = sprZeaSolidCut; 
            visible = true; 
            image_alpha = 0; 
            alarm[0] = 40; 
        }
    break; 
    
    case 8918: 
        with objMovingPlatform { alarm[0] = 1; }
        with objInfJumpSign { fadeOut = true; }
        with objZeaCornelia { alarm[0] = 0; }
    break;

    case 9000:
        with objBGDrawer2 { slowMode = true; }
        with objBGDraw { alarm[0] = 1; } //Fade out background
    break;
    
    case 9101: //with objPlayer { infJump = true; }
        global.infiniteJumpKid = true;
        if !instance_exists(objWing) { ic(0, 0, objWing); }
    break;
    
    // Transition into the finale
    case 9128: 
        // Destroy the view controller and set back to default view setup
        instance_destroy(objViewsController);
        view_xview[0] = 0;
        view_yview[0] = 0;
        view_wview[0] = 800;
        view_hview[0] = 608;
        ic(0, 0, objEff_CheapSplitScreen);
        instance_destroy(objBGCircleGradient);
        instance_destroy(objTransitionBG_OrionEffect2);
        instance_destroy(objBGDrawer2);
        instance_destroy(objS8_CherrySlideMoveFinale); //aun en duda
        
        
        
        var s = ic(400, 64, objParticlesLineEnd); 
        s . hspeed = -3;
        
        var s = ic(400, 64, objParticlesLineEnd); 
        s . hspeed = 3;
        
        //background_visible[5] = true;
        //background_alpha[5] = 0.3;
        //scrBGSettings(5,bgGridShape1A,0,0,1,1,0,0,1,c_white,0.3,0);
        instance_destroy(objBGDraw);
        var rngHUE = irandom(255);
        background_color = make_colour_hsv(rngHUE, 113, 110);
        //scrBGSettings(6,bgK3BigGrid,16,0,1,1,0,-1,1,make_colour_hsv(rngHUE,113,50),0.2,0);
        
        
        // Chance to get Goku Drip in the last segment for a few miliseconds
        var chances = irandom(50); //I was planning to make the chances 1 in 300 (it was overkill)
        
        // Make ZEA visible
        with (objZeaCornelia) 
        {
            appear = false;
            if chances == 0 and global.clear // Game has to be cleared beforehand
            {
                sprite_index = sprDripGoku; 
                x = 400;
                alarm[1] = 15;
                ic(0, 0, objBoss_shapeEffect);
            }
            else
                sprite_index = sprZeaCut;
                
            visible = true;
            depth = -7;
        }
        //with (objS8_CherrySlideMoveFinale) { depth = -8; }
            
        //event_user(3); //Create the 3D Sphere
        x = 400;
        y = 304;
        event_user(4); // Create the samba 3D
    break;
    
    // Zoom out (THE END)
    case 9876: 
        //borders = false;
        tile_layer_hide(-101);
        ic(400, 304, objEff_ZoomOutFinale);
        instance_destroy(objBlock);
        
        with (objZeaCornelia) { sprite_index = sprZea1; } // Full body
        with (objPlayerKiller) { mask_index = sprNull; }
        
        // Create 2 ZEA Chibis
        var zeaLeft = ic(-416, 96, objZeaChibi_Finale);
        zeaLeft . image_xscale = -1;
        zeaLeft . offset = 200;
        
        ic(400, -280, objCongratulations);
        
        ic(1216, 96, objZeaChibi_Finale);
    break;
    
    // Create a White FadeIn effect
    case 10048:
        ic(0, 0, objFadeInColor);
    break;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>----- Attacks ----- </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Attacks) - 0 to 4000

switch (t)
{
    case 120: alarm[6] = 1; break;
    case 785: alarm[6] = 0; with (objPlayerKiller) mask_index = sprNull; break;
    // Create spiral on objWater coordinates (Probably will be removed)
    
    case 854:
        var rng = irandom(90);
        for (var i = 0; i &lt; 360; i += 360 / 4)
        {
            var semi = ic(400, 200, objS1_SemiCricle);
            semi . angle = i + rng;
            semi . radius = 300;
            
        }
    
    break;
    
    case 1200:
        with objS1_SemiCricle { alarm[0] = 0; }
        with objPlayerKiller { mask_index = sprNull; }
    break;
    
    case 1319:
        with objS1_SemiCricle { alarm[1] = 1 }
        //with objS1_SemiCricle { angleSPD *= -1; }
        /*
        var idx = ic(0,64,objWater); //tag 1
        idx . visible = false;
        
        idx = ic(800,64,objWater); //tag 2
        idx . visible = false;
        
        with objWater
        {
            for (i=0; i&lt;360; i+=360/10)
            {
                var ss = ic( x, y, objS1_CherryRotationSample );
                ss.parent = id;
                ss.dire = i;
                if x &gt; 400{
                ss.direSPD = -2;}else{ss.direSPD = 2;}
                ss.distance = 64;
                ss.alarm[0] = 1;
            }
        }*/
    break;
    
    // Destroy spiral and invisible water
    case 1592:
        instance_destroy(objWater);
        instance_destroy(objS1_CherryRotationSample);
        instance_destroy(objS1_CherryRotation2Sample);
    break;
    
    // Create something to go up
    case 1636:
        ic(400, 304, objS3_gravCherryCreater);
    break;
    
    // Create circle following the mouse Y and doing wabble movement
    //case 2385:
    case 2408:
        instance_destroy(objS3_gravCherryCreater);
        instance_destroy(objS3_gravCherry);
        
        var s = ic(400, 96, objS2_FruitPointer);
        s . alarm[0] = 1;
    break;
    
    //case 2397:
    case 2417:
    case 2439:
    case 2462:
    case 2484:
    case 2507:
    case 2530:
    case 2552:
    case 2575:
    case 2598:
    case 2622:
    case 2647:
    case 2669:
    case 2693:
    case 2717:
    case 2741:
        if instance_exists(objS2_FruitPointer)
        {
            //with objAttPattern5_attack { speed = 8; }
            with (objS2_FruitCreater)
            {
                var s = ic(x, y, objS2_FruitAttack);
                s . direction = point_direction(objS2_FruitPointer.x, objS2_FruitPointer.y, x, y);
                s . speed = 8;
                s . spdStart = 8;
                s . image_blend = image_blend;
                s . Hue = Hue;
            }
        }
    break;
    
    case 2890:
        tempColorData = irandom(255);
        for (var i = 0; i &lt; 8; i += 1)
        {
            var bouncy = ic(16, 304 - 96, objS3_BouncyCherrys_NoKiller);
            bouncy . gravity = 0.17;
            bouncy . speed = i;
            bouncy . direction = 0;
            bouncy . image_blend = make_colour_hsv(tempColorData, 180, 245);
            
            bouncy = ic(784, 304 - 96, objS3_BouncyCherrys_NoKiller);
            bouncy . gravity = 0.17;
            bouncy . speed = i;
            bouncy . direction = 180;
            bouncy . image_blend = make_colour_hsv(tempColorData, 180, 245);
        }
    break;
    
    case 2943:
        
        for (var i = 0; i &lt; 8; i += 1)
        {
            var bouncy = ic(16, 304 - 96, objS3_BouncyCherrys);
            bouncy . gravity = 0.17;
            bouncy . speed = i;
            bouncy . direction = 0;
            bouncy . image_blend = make_colour_hsv(tempColorData, 180, 245);
            
            bouncy = ic(784, 304 - 96, objS3_BouncyCherrys);
            bouncy . gravity = 0.17;
            bouncy . speed = i;
            bouncy . direction = 180;
            bouncy . image_blend = make_colour_hsv(tempColorData, 180, 245);
        }
        
        /*
        repeat (10)
        {
            var bouncy = ic(16,304,objS3_BouncyCherrys);
            bouncy . gravity = 0.15;
            bouncy . speed = random_range(1,5);
            bouncy . direction = random_range(10,80);
            bouncy . image_blend = make_colour_hsv(tempColorData,180,245);
            
            bouncy = ic(784,304,objS3_BouncyCherrys);
            bouncy . gravity = 0.15;
            bouncy . speed = random_range(1,5);
            bouncy . direction = random_range(100,170);
            bouncy . image_blend = make_colour_hsv(tempColorData,180,245);
        }*/
    break;
    
    case 3036:
        with (objS3_BouncyCherrys) { 
            moving = false;
            mask_index = sprNull; 
            regroup = true; 
            friction = 0; 
            speed = 0; 
            alarm[0] = 1; 
        }
    break;
    
    case 3079:
        instance_destroy(objS3_BouncyCherrys);
        
        var kidX = scrGetPlayerX();
        var defineAngle = map(kidX, 0, 800, 45, 225);
        
        scrMakeShape(400, 304, objS3_CurvingSplode, 4, 4, defineAngle, 0, 5, 1, 2, 0, noone, 0);
        with (objS3_CurvingSplode) { image_blend = make_colour_hsv(other.tempColorData, 180, 245); }
    break;
    
    case 3130:
        instance_destroy(objS2_FruitCreater);
        instance_destroy(objS2_FruitPointer);
        with objLightManager { fadeOut = true; }
    
    break;
    
    
    case 3132:
        scrMakeShapeFinale(400, 304, objS3_StarGoingToCenter, 5, 3, irandom(360), 64, 5, 1, 2, 0);
        counter = 0; with objS3_StarGoingToCenter { tag = irandom(2); }
    break;
    //case 3132: counter = 0; with objAtt6_StarGoingToCenter { tag = irandom(2); } break;
    //case 3501: counter = 0; with objAtt6_StarGoingToCenter { tag = irandom(2); } break;
    
    case 3133: 
    case 3149:
    case 3166:
        with objS3_StarGoingToCenter
        {
            if tag = other.counter
            {
                x = 200 + 200 * tag;
                y = 100;
                speed = irandom(4) + 1;
                direction = irandom(360);
                visible = true;
            }
        }
        counter++
    break;
    
    case 3315:
    case 3331:
    case 3346:
        with (objS3_StarGoingToCenter) { alarm[1] = 1; }
    break;
    
    
    // Spin Star
    case 3375: with objS3_StarGoingToCenter { alarm[2] = 1; } break;
    
    // Shoot with the star
    case 3411:
    case 3491:
        with objS3_StarGoingToCenter { alarm[3] = 1 }
    break;
    
    case 3510:
        with objS3_StarGoingToCenter { alarm[4] = 1 }
    break;
    
    case 3694: counter = 0; break; // Reset the counter
    case 3695:
    case 3741:
        var spawnNum = 40;
        var rng = irandom_range(40, 50);
        var col = make_colour_hsv(irandom(255), 90, 255);
        for (var i=0; i&lt;spawnNum; i+=1)
        {
            var obj = ic(400, 304, objS3_CircleSplit);
            
            if counter &lt; 2
                obj . direction = i * (360 / spawnNum);
            else
                obj . direction = 45 + i * (360 / spawnNum);
                
            obj . speed = 5;
            obj . friction = 0.1;
            obj . image_blend = col;
            
            if i mod 2 == 0
                obj . alarm[counter] = rng;
            else 
                obj . alarm[counter + 1] = rng;
        }
        counter += 4;
    break;
    
    case 3879: counter = 0; break; //Reset Counter
    case 3880:
    case 3894:
    case 3918:
        var shapeAttached = ic(200 + 200 * counter, 200, objS4_ShapeDecompress_Owner);
        shapeAttached . alarm[0] = 1;
        shapeAttached . tag = counter;
        
        counter++;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Attacks) - 4000 to 8000

switch (t)
{
    //case 4001: instance_create(0,0,objS3_CherryCreater); break;
    
    case 4070: counter = 0; break; //Reset Counter
    case 4071:
    case 4085:
    case 4101:
        var shapeAttached = ic(600 - 200 * counter, 200, objS4_ShapeDecompress_Owner);
        shapeAttached . alarm[0] = 1;
        shapeAttached . tag = counter;
        
        counter++;
    break;
    
    // Background effect like sasanoke area or orion along with the star attack
    case 4252:
        var obj = instance_create(168, -400, objS4_AttackPattern5_Star);
        obj . visible = false;
        obj . gravity = 0.5;
        obj . image_blend = make_colour_hsv(30, 70, 255);
        //obj . angleSPD = 1;
        
        obj = instance_create(632, -400, objS4_AttackPattern5_Star);
        obj . visible = false;
        obj . gravity = 0.5;
        obj . image_blend = make_colour_hsv(90, 70, 255);
        //obj . angleSPD = -1;
        
        //TEST
        instance_destroy(objS3_CherryCreater);
        with objCherry { mask_index = sprNull; }
        with objS4_ShapeDecompress { mask_index = sprNull; }
    break;
    
    // Control rotation from the star Orion
    case 4253: //CONTROL Spin
        with objS4_AttackPattern5_Star { if tag == 1 and x &gt; 400 { direSPD = -1 } }
    break;
    
    // Shoot with the star after the orion transition
    case 4346:
    case 4397:
        with objS4_AttackPattern5_Star { if tag == 1 { alarm[2] = 1; } }
    break;
    case 4398: with objPlayerKiller { mask_index = sprNull; } break;
    
    // Star pendulum Attack (Unused)
    /*case 4405:
    //DO SOMETHING HERE
        /*for (i=1; i&lt;=2; i+=1)
        {
            var obj = instance_create(0,0,objS4_AttackPendulumMove);
            obj . dire = 180;
            obj . dist = 256*i;
            
            obj = instance_create(0,0,objS4_AttackPendulumMove);
            obj . dire = 0;
            obj . dist = 256*i;
            obj . direSPD = -2;
        }
    break;*/
    
    
    // Create attack alongside lyrics
    case 4680:
        //counter = choose(-1,1);
        alarm[2] = 1; //random attack from the right
    break;
    
    case 4909:
        alarm[2] = 0;
        with objS4_CherryMove3D { go = true; speed = 0; }
        with objS4_Spike { stop = true; }
    break;
    
    case 4983:
        counter = counter * -1;
        alarm[2] = 1;
        with objS4_Spike { stop = false; spd *= -1;}
        with (objS4_CherryMove3D)
        {
            speed = irandom_range(3, 6);
            
            if other.counter == 1
                direction = irandom_range(160, 200);
            else
                direction = irandom_range(-20, 20);
        }
    break;
    
    //Stop spawning bullets and slowdown the cherrys
    case 5253:
        alarm[2] = 0;
        with (objS4_CherryMove3D) { friction = 0.2; }
    break;
    
    case 5284:
    case 5310:
    case 5330:
        with (objS4_CherryMove3D) 
        { 
            friction = 0; 
            speed = 1;
            direction = random(360);
        }
    break;
    case 5354:
        with (objS4_CherryMove3D) 
        { 
            var kidX = scrGetPlayerX();
            var kidY = scrGetPlayerY();
            
            speed = 10;
            direction = point_direction(kidX, kidY, x, y);
        }
    break;
    
    
    case 5355:
        //alarm[2] = 0;
        with (objS4_CherryMove3D) { mask_index = sprNull; }
    break;
    /*case 5500:
        var pointPlayer = point_direction(400,304,objPlayer.x,objPlayer.y)+22;
        for (var i=0; i&lt;360; i+=360/8)
        {
            var obj = instance_create(400,304,objAttackPattern7_circle);
            obj . dire = i+pointPlayer;
            obj . dist = 128;
        }
        
    break;*/
    
    // Rotation segment attacks
    case 5386:
        counter = 0;
        var rngCol = make_colour_hsv(irandom(255), 160, 255);
        for (var i = 0; i &lt; 360; i += 360 / 4)
        {
            var obj = instance_create(400, 304, objS5_MakePetal);
            obj . direction = i + 45;
            obj . speed = 10;
            obj . friction = 0.2;
            obj . image_blend = rngCol;
            obj . mask_index = sprNull;
            
            obj . dirSelect = 24; 
            obj . tag = counter;
            obj . dire2 = 360/4+180;

            
            obj = instance_create(400, 304, objS5_MakePetal);
            obj . direction = i + 45;
            obj . speed = 10;
            obj . friction = 0.2;
            obj . image_blend = rngCol;
            obj . mask_index = sprNull;
            
            obj . dirSelect = -24;
            obj . tag = counter;
            obj . dire2 = 360/4+180;
            
            counter++;
            
        }
        
        
    break;
    
    case 5476:
        //with objPatBall_circleDecoration { depth = -1; }
        with (objS5_MakePetal)
        {
            friction = 0;
            alarm[0] = 1;
            alarm[1] = 1;
            dirSPD -= 0.75; //0.2
            mask_index = sprite_index;
        }
        counter = 0;
    break;

    //Petals went to the center
    case 5662:
    case 5674:
    case 5685:
    case 5697:
        with objS5_Cherry 
        {  
            if tag == other.counter
                go = true;
        }
        counter++;
    break;
    
    case 5710:
        with objS5_Cherry 
        {  
            var temp = ic(x, y, objColoredCherry);
            temp . sprite_index = sprite_index;
            temp . image_xscale = image_xscale;
            temp . image_yscale = image_yscale;
            temp . image_blend = image_blend;
            temp . direction = random(360);
            temp . speed = irandom_range(1, 6);
            temp . friction = 0.2;
            temp . mask_index = sprNull;
            
            instance_destroy();
        }
    break;
    case 5731:
        //instance_destroy(objCherry);
        with objColoredCherry
        {
            var te = global.pTowardOrigin_Type2;
            part_type_colour1(te, image_blend);
            part_type_blend(te, true);
            part_type_alpha1(te, 0.25);
            part_particles_create(global.pTowardOrigin_System, x, y, te, 3);
            instance_destroy();
        }
        
    break;
    
    // Next 
    case 5755:
    //case 5852:
        counter = choose(-1, 1);
        instance_destroy(objS5_Cherry);
        //part_particles_create_colour(global.pTowardOrigin_System,400,304,global.pTowardOrigin_Type,c_white,10);
        /*var dir = choose(-2, 2);
        for (var i=0; i&lt;360; i+=360/12)
        {
            var obj = instance_create(400,304,objS5_CircleBack);
            obj . dire = i;
            obj . direSPD = dir;
            //obj . image_blend = make_colour_hsv(40,90,255);
            obj . image_blend = c_black;
            obj . distMax = 160;
        }*/
        
    break;
    
    case 5756:
        for (var i = 0; i &lt; 360; i += 360 / 4)
        {
            var obj = ic(400 + lengthdir_x(500, i + irandom_range(-90, 90)), 304 + lengthdir_y(700, i + irandom_range(-90, 90)), objS5_SansBonesAttack);
            obj . dire = i + 45; //irandom_range( -90, 90 );
            obj . direStart = i + 45;
            //obj . direSPD = -1;
            
            obj . dist = 700;
            obj . distStart = 128;
            obj . image_blend = tempColorData;
            
            //obj . tag = 0;
        }
        
        for (var i = 0; i &lt; 360; i += 360 / 6)
        {
            // 1st row
            var obj = ic(400 + lengthdir_x(500, i + irandom_range(-90, 90)), 304 + lengthdir_y(700, i + irandom_range(-90, 90)), objS5_SansBonesAttack);
            obj . dire = i //+irandom_range(-90,90);
            obj . direStart = i;
            
            obj . dist = 700;
            obj . distStart = 160;
            obj . tag = 1;
            obj . image_blend = tempColorData;
            
            
            // 2nd row
            obj = ic(400 + lengthdir_x(500, i + irandom_range(-90, 90)), 304 + lengthdir_y(700, i + irandom_range(-90, 90)), objS5_SansBonesAttack);
            obj . dire = i //+irandom_range(-90,90);
            obj . direStart = i;
            
            obj . dist = 700;
            obj . distStart = 192;
            obj . tag = 1;
            obj . image_blend = tempColorData;
            
            
            // 3rd row
            obj = ic(400 + lengthdir_x(500, i + irandom_range(-90, 90)), 304 + lengthdir_y(700, i + irandom_range(-90, 90)), objS5_SansBonesAttack);
            obj . dire = i //+irandom_range(-90,90);
            obj . direStart = i;
            
            obj . dist = 700;
            obj . distStart = 224;
            obj . tag = 1;
            obj . image_blend = tempColorData;
        }
        
        
    break;
    
    case 5757: 
        with (objS5_SansBonesAttack) 
        { 
            visible = true; 
            readyPosition = true; 
            image_alpha = 0.5;
        } 
    break;
    

    case 5780:
        with (objS5_SansBonesAttack) { alarm[1] = 0; }
        
        var sspd = choose(-1, 1);
        with objS5_LightsLaser { angleSPD = sspd; }
        
        for (var i = 0; i &lt; 5; i += 1)
        {
            var barrier = ic(400, 304, objS5_Barrier);
            barrier . targetX = 400 - 128 - 32 * i;
            barrier . hspeed = -5;
            barrier . friction = 0.125;
            
            barrier = ic(400, 304, objS5_Barrier);
            barrier . targetX = 400 + 128 + 32 * i;
            barrier . hspeed = 5;
            barrier . friction = 0.125;
        }
    break;
    
    // Create a path trail to let player know where's gonna rotate
    //case 5822:
    case 5848:
        for (var i = 0; i &lt; 360; i += 360 / 4) //4 - inner row
        {
            var indicator = ic(0, 304, objS5_VisualTrailDirection);
            indicator . radius = 128;
            indicator . angleCurrent = i + 45;
            indicator . angleTarget = indicator . angleCurrent + ((360 / 4 ) * counter);
        }
        for (var i = 0; i &lt; 360; i += 360 / 6) // 6 - outer row
        {
            var indicator = ic(0, 304, objS5_VisualTrailDirection);
            indicator . radius = 160;
            indicator . angleCurrent = i;
            indicator . angleTarget = indicator . angleCurrent - ((360 / 6 ) * counter);
            
            indicator = ic(0, 304, objS5_VisualTrailDirection);
            indicator . radius = 192;
            indicator . angleCurrent = i;
            indicator . angleTarget = indicator . angleCurrent - ((360 / 6) * counter);
            
            indicator = ic(0, 304, objS5_VisualTrailDirection);
            indicator . radius = 224;
            indicator . angleCurrent = i;
            indicator . angleTarget = indicator . angleCurrent - ((360 / 6) * counter);
        }
    break;
    
    case 5935: //5910 before
        with objS5_Barrier { go = true; }
        with (objS5_SansBonesAttack)
        {
            readyPosition = false;
            spin = true;
            mask_index = sprite_index;
            image_alpha = 1;
            alarm[0] = 1; // Spawn particles
            if tag == 0
                direSPD_Start = 1 * other.counter;
            else
                direSPD_Start = -1 * other.counter
        }
        
        instance_destroy(objS5_VisualTrailDirection);
    break;
    
    
    case 6063:
        alarm[1] = 1;
    break;
    
    
    case 6876:
        //STAR SPAWN
        ic(400, 96, objS6_CreateCursedFlower);
    break;
    
    case 6882:
    case 6905:
    case 6929:
    case 6952:
    case 6976:
    case 6998:
    case 7019:
    case 7042:
    case 7063:
        with objS6_CreateCursedFlower { alarm[0] = 1; }
    break;
    
    case 7258:

        var playerX = scrGetPlayerX();
        var playerY = scrGetPlayerY();
        
        
        for (var i = 0; i &lt; 360; i += 360 / 60)
        {
            var tempDistance = irandom_range(64, 96);
            var cir = ic(playerX + lengthdir_x(tempDistance, i), playerY + lengthdir_y(tempDistance, i), objS7_GoingToCenter);
            cir . speed = random_range(8, 15);
            cir . direction = point_direction(playerX, playerY, cir.x, cir.y);
            cir . friction = 0.37;

        }
    break;
    case 7350:
        with objS7_GoingToCenter alarm[0] = 1;
    break;
    
    case 7380:
        ic(400, 144, objS7_CherryFadeIn);
        with objS7_GoingToCenter { alarm[1] = 5; }
        with objS7_SmallCherrys { blendColour = true; direction = irandom(360); gravity_direction = direction; gravity = 0.05; }
    break;
    
    /////////////////////////////
    case 7439: 
        instance_activate_object(objS7_FormNumbers); 
        with objS7_FormNumbers { visible = true; }
        counter = 0; 
    break;
    
    //4 , 5 , 6 (lyrics)
    case 7440:
    case 7465:
    case 7490:
        with (objS7_FormNumbers) { 
            if tag = other.counter
            {
                startFormation = true;
            }
        }
        counter++;
    break;
    
    // The end for "4,5,6" cherrys
    case 7534:
        with objS7_FormNumbers { startFormation = false; alarm[1] = 1; alarm[2] = 1; }
        instance_fade_out(objS7_CherryFadeIn, 25); 
        instance_destroy(objS7_GoingToCenter);
    break;
    
    case 7629:
        var numberCherrys = 360 / 44;
        var rngAngle = irandom(360);
        theAngle = rngAngle;
        for (var i = 0; i &lt; 360; i += numberCherrys)
        {
            var lenX = lengthdir_x(96, i + rngAngle);
            var lenY = lengthdir_y(96, i + rngAngle);
            
            var cursedFlower = ic(400 + lenX, 304 + lenY, objS7_GoinCenterMakeCursed);
            cursedFlower . tag = irandom(2);
            cursedFlower . image_blend = make_colour_hsv(map(i, 0, 359, 0, 255), 120, 255); //90 sat
            if i == 0 { cursedFlower . cherryReference = true; }
        }
        
        
        counter = 0; // Reset Counter
    break;
    
    // 2nd Tig tig tig 
    case 7630:
    case 7647:
    case 7663:
        with objS7_GoinCenterMakeCursed
        {
            if tag = other.counter
            {
                x = 200 + 200 * tag;
                y = 100;
                speed = irandom(4) + 1;
                direction = irandom(360);
                visible = true;
            }
        }
    
        counter++;
    break;
    case 7814:
    case 7831:
    case 7849:
        with objS7_GoinCenterMakeCursed { alarm[1] = 1; }
    break;
    
    case 7889: with objS7_GoinCenterMakeCursed { alarm[2] = 1; } break;
    case 7890:
    case 8000:
        if instance_exists(objS7_GoinCenterMakeCursed)
        {
            if objS7_GoinCenterMakeCursed.cherryReference
            {
                var dir1 = objS7_GoinCenterMakeCursed.direConstant;
                var dir2 = objS7_GoinCenterMakeCursed.dire
                theAngle = dir1 + dir2;
            }
            event_user(1); //Cursed flower
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer (Attacks) - 8000 to 12000

switch (t)
{
    
    case 8191: 
        with objS7_GoinCenterMakeCursed { alarm[3] = 1; } 
        view_xview[0] += 50;
        view_yview[0] += 38;
        view_wview[0] -= 50 * 2;
        view_hview[0] -= 38 * 2;
        
        tile_layer_show(-101);
        borders = false;
        
    break;
    case 8242: 
        with objS7_GoinCenterMakeCursed { alarm[4] = 1; } 
        view_xview[0] += 50;
        view_yview[0] += 38;
        view_wview[0] -= 50 * 2;
        view_hview[0] -= 38 * 2;
    break;
    
    
    case 8374:
        /*var s = ic(120,64,objAtt19_BigCherry);
        s . vspeed = 6;
        s = ic(680,608-64,objAtt19_BigCherry);
        s . vspeed = -6;*/
        
        alarm[3] = 1;
    break;
    
    
    case 8656: //Okurimono
        for (var i = 0; i &lt; 360; i += 360 / 16)
        {
            var s = ic(400, 0, objS8_ReduceCircle);
            s . dire = i;
            s . dist = 800;
            
            s = ic(400, 0, objS8_ReduceCircle);
            s . dire = i + 7;
            s . dist = 800;
            s . direSPD = -2;
        }
        
        alarm[3] = 0;
        with objCherry
        {
            var kidX = scrGetPlayerX();
            var kidY = scrGetPlayerY();
            direction = point_direction(kidX, kidY, x, y);
            speed = 10;
        }
        
        
    break;
    case 8730: //Yay (Black cherry circle)
        with objS8_ReduceCircle 
        {
            disconnect = true;
            //speed = 15;
            speed = point_distance(x,y,400,200)/10;
            direction = point_direction(400,200,x,y);
            alarm[0] = 1;
            alarm[1] = 0;
            canDestroy = true;
        }
        
        with objCherry
        {
            speed = point_distance(x,y,400,200)/10;
            direction = point_direction(400,200,x,y);
        }
    break;
    
    // Attack before the warning split
    case 8957: counter = 0; tempColorData = irandom(255); alarm[4] = 1; break; //SPAM Spiral
    case 9038: alarm[4] = 0; with (objS8_NormalCherry) { direction = random(360); speed = 1; } break;
    
    
    case 9061:
    case 9084:
    case 9106:
        with (objS8_NormalCherry) { direction = random(360); }
    break;
    
    case 9107:
        with (objS8_NormalCherry) { speed = 0; }
    break;
    
    case 9111:
        with (objS8_NormalCherry) { 
                mask_index = sprNull;
                alarm[0] = 1;
            }
    break;
    
    // Shoot with the samba attack
    case 9498: counter = 0; break;
    case 9499:
    case 9592:
    case 9688:
        with objS9_AttSamba3D
        {
            alarm[1] = 1;
            tag = other.counter;
        }
        counter++;
    break;
    
    // Create a random order of 3 attacks 
    case 9569:
        attackS9_list = ds_list_create();
        attackS9_index = 0;
        ds_list_add(attackS9_list,0,1,2);
        ds_list_shuffle(attackS9_list);
    break;
    
    case 9570:
    case 9662:
    case 9760:
        var fullList = ds_list_size( attackS9_list );
        if attackS9_index &lt; fullList
        {
            var method = attackS9_list[|attackS9_index];
            attackS9_index++;
        }
    
        
        // Destroy cheery toward ZEA
        with objS9_CherryNormalAttack
        {
            if tag = objS9_AttSamba3D.tag
                instance_destroy();
        }
        
        switch (method)
        {
            case 0:
                var RNG = irandom(360);
                for (var i = 0; i &lt; 16; i += 1)
                {
                    for (var j = 0; j &lt; 5; j += 1)
                    {
                        var s = ic(400, 304, objS9_CherryNormalAttack);
                        s . depth = -8;
                        s . speed = j + 3;
                        s . direction = (RNG + i * (360 / 16)) + (j * 5);
                        s . image_blend = make_colour_hsv(map(s . direction, 0, 359, 0, 254), 180, 255);
                    }
                }
            break;
            
            case 1: // Random burst of bullets
                var ownerTag = objS9_AttSamba3D.tag;
                repeat(120)
                {
                    var rngScale = random_range(0.5, 1);
                    var rngExplode = ic(400, 304, objS9_CherryNormalAttack);
                    rngExplode . image_xscale = rngScale;
                    rngExplode . image_yscale = rngScale;
                    rngExplode . speed = random_range(3, 5);
                    rngExplode . direction = irandom(360);
                    rngExplode . depth = -8;
                    rngExplode . sprite_index = sprCherryFinaleD;
                    rngExplode . image_index = irandom(7);
                    //rngExplode . image_blend = make_colour_hsv(map(rngExplode . direction,0,359,0,254),180,255);
                    rngExplode . tag = ownerTag;
                }
            break;
            
            
            case 2: // Normal star
                scrMakeShapeFinale(400, 304, objS9_StarFinaleRandom, 5, 4, irandom(360), 0, 6, 1, 2, 0);
            break;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn the cherry barriers doing JSAB wabble (Segment 8)

counter = 0;
var numberCherrys = floor(800 / 32);
for (var i = 16; i &lt; 800; i += 32)
{
    var col = make_colour_hsv(map(i, 0, 800, 0, 255), 120, 255);
    
    var s = ic(i, 80, objS8_CherrySlideMoveFinale);
    s . tag = counter;
    s . moveY = 80 + 32;
    s . image_blend = col;
    
    if counter == 0
        s . moving = false;
    else
        s . moving = true;
    
    
    s = ic(i, 528, objS8_CherrySlideMoveFinale);
    s . tag = -counter;
    s . moveY = 528 - 32;
    s . image_blend = col;
    if counter == 0
        s . moving = true;
    else
        s . moving = false;
    
    counter++;
    counter %= 2;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transition with squares scaling out (Segment 8)

for (var i = 16; i &lt; 800; i += 32)
{
    for (var j = 80; j &lt; 544; j += 32)
    {
        var s = ic(i, j, objVisual_SquareFadeOut);
        s . image_blend = make_colour_rgb(104, 255, 227);
    }
}

// Create an invisible figure to collide (I couldn't figure out the math so I did my own way)
ic(400, 304, objCircleExpand_invisible);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the circle samba 3D rotation (Segment 9)

var dis = 64; //irandom_range(96,160);
var total = 8;
var tempAngle = irandom(360);

/// Float values taken from a template star at (0,0)
scrAttCreateSamba(0, 33/2, total, 0, dis, tempAngle);
scrAttCreateSamba(0, 43.20/2, total, 19.40/8, dis, tempAngle);
scrAttCreateSamba(0, 53.40/2, total, 38.79/8, dis, tempAngle);
scrAttCreateSamba(0, 31.80/2, total, 35.09/8, dis, tempAngle);
scrAttCreateSamba(0, 10.20/2, total, 31.38/8, dis, tempAngle);
scrAttCreateSamba(0, -5.10/2, total, 47.08/8, dis, tempAngle);
scrAttCreateSamba(0, -20.40/2, total, 62.77/8, dis, tempAngle);
scrAttCreateSamba(0, -23.55/2, total, 41.08/8, dis, tempAngle);
scrAttCreateSamba(0, -26.70/2, total, 19.40/8, dis, tempAngle);
scrAttCreateSamba(0, -46.35/2, total, 9.70/8, dis, tempAngle);
scrAttCreateSamba(0, -66/2, total, 0, dis, tempAngle);
scrAttCreateSamba(0, -46.35/2, total, -9.70/8, dis, tempAngle);
scrAttCreateSamba(0, -26.70/2, total, -19.40/8, dis, tempAngle);
scrAttCreateSamba(0, -23.55/2, total, -41.08/8, dis, tempAngle);
scrAttCreateSamba(0, -20.40/2, total, -62.77/8, dis, tempAngle);
scrAttCreateSamba(0, -5.10/2, total, -47.08/8, dis, tempAngle);
scrAttCreateSamba(0, 10.20/2, total, -31.38/8, dis, tempAngle);
scrAttCreateSamba(0, 31.80/2, total, -35.09/8, dis, tempAngle);
scrAttCreateSamba(0, 53.40/2, total, -38.79/8, dis, tempAngle);
scrAttCreateSamba(0, 43.20/2, total, -19.40/8, dis, tempAngle);
// Create a "Square" Pattern
/*scrAttCreateSamba(0,-32,total,3,dis, tempAngle );
scrAttCreateSamba(0,-32,total,6,dis, tempAngle );
scrAttCreateSamba(0,-32,total,9,dis, tempAngle );
scrAttCreateSamba(0,-32,total,12,dis, tempAngle );
scrAttCreateSamba(0,-32,total,15,dis, tempAngle );

scrAttCreateSamba(0,32,total,3,dis, tempAngle );
scrAttCreateSamba(0,32,total,6,dis, tempAngle );
scrAttCreateSamba(0,32,total,9,dis, tempAngle );
scrAttCreateSamba(0,32,total,12,dis, tempAngle );
scrAttCreateSamba(0,32,total,15,dis, tempAngle );

scrAttCreateSamba(0,-16,total,3,dis, tempAngle );
scrAttCreateSamba(0,16,total,3,dis, tempAngle );

scrAttCreateSamba(0,-16,total,15,dis, tempAngle );
scrAttCreateSamba(0,16,total,15,dis, tempAngle );

scrAttCreateSamba(0,0,total,3,dis, tempAngle );
scrAttCreateSamba(0,0,total,15,dis, tempAngle );

//Custom Test
scrAttCreateSamba(0,-32,total,3,dis, tempAngle );
scrAttCreateSamba(0,-24,total,6,dis, tempAngle );
scrAttCreateSamba(0,-16,total,9,dis, tempAngle );
scrAttCreateSamba(0,-8,total,12,dis, tempAngle );
scrAttCreateSamba(0,0,total,15,dis, tempAngle );

scrAttCreateSamba(0,32,total,3,dis, tempAngle );
scrAttCreateSamba(0,24,total,6,dis, tempAngle );
scrAttCreateSamba(0,16,total,9,dis, tempAngle );
scrAttCreateSamba(0,8,total,12,dis, tempAngle );
scrAttCreateSamba(0,0,total,15,dis, tempAngle );

/*scrAttCreateSamba(0,-16,total,6,32);
scrAttCreateSamba(0,0,total,9,32); //18
scrAttCreateSamba(0,16,total,12,32);
scrAttCreateSamba(0,32,total,15,32);
        
scrAttCreateSamba(0,32,total,3,32);
scrAttCreateSamba(0,16,total,6,32);
//scrAttCreateSamba(0,0,total,9,32); //18
scrAttCreateSamba(0,-16,total,12,32);
scrAttCreateSamba(0,-32,total,15,32);



/* Create a "X" Pattern
scrAttCreateSamba(0,-32,total,3,32);
scrAttCreateSamba(0,-16,total,6,32);
scrAttCreateSamba(0,0,total,9,32); //18
scrAttCreateSamba(0,16,total,12,32);
scrAttCreateSamba(0,32,total,15,32);
        
scrAttCreateSamba(0,32,total,3,32);
scrAttCreateSamba(0,16,total,6,32);
//scrAttCreateSamba(0,0,total,9,32); //18
scrAttCreateSamba(0,-16,total,12,32);
scrAttCreateSamba(0,-32,total,15,32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3D Cheap sphere generator (Unused)
for ( var i = 0; i &lt; 800; i += 200 ) //104
{
    for ( var j = 0; j &lt; 608; j += 202 )
    {
        ic( i, j, objNeos3DSphereAttack );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rectangle transition (Segment 4)

counter = 0;
for (var i = 32; i &lt; 865; i += 64)
{
    for (var k = 64; k &lt; 608 - 64; k += 32)
    {
        if k mod 64 = 0
            instance_create(i - 32, k, objTransitionRectangle05);
        else
            instance_create(i, k, objTransitionRectangle05);
    }   
}

for (var b = 0; b &lt; 3; b++)
{
    for (var a = 256; a &lt;= 608; a += 64)
    {
        if b == 1
        {
            var obj = instance_create(a + 32, 256 + 32 * b, objTransitionRectangle05);
            obj . depth = -200; 
            obj . sprite_index = sprLyrics5_part;
            obj . image_index = counter;
            counter++;
            
        }
        else
        {
            var obj = instance_create(a, 256 + 32 * b, objTransitionRectangle05);
            obj . depth = -200; 
            obj . sprite_index = sprLyrics5_part;
            obj . image_index = counter;
            counter++;
        }

    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make cursed flower (Segment 7)

var spawnAngle = theAngle;
var spawnNum = 44; //was set 48
if spawnNum % 4 != 0
    show_error("The value selected from spawnNum is not multiplied by 4", true);
    
    
for ( var i = 0; i &lt; spawnNum; i++ )
{
    /*only works with 3 petals (spawnNun needs to be multiplied by 4)
        1: 0,4,8,12,16,20,24,28,32,36,40,44,48
        2: 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,(49)
        3: 2,6,10,14,18,22,26,30,34,38,42,46,(50)
    */
    if (i % 2 == 0) 
    {
        if (i % 4 == 0) 
            counter = 1;
        else 
            counter = 2;
    } 
    else 
        counter = 1.5;
        
        
    var k = spawnAngle + i * (360 / spawnNum);
    var distance = 96;
    pX = 400 + lengthdir_x(distance, k);
    pY = 304 + lengthdir_y(distance, k);
    //var obj = instance_create(400+lengthdir_x(128,k),304+lengthdir_y(128,k),objFlowerEffTouhou);
    
    var obj = instance_create(pX, pY, objS7_FlowerEffTouhou);
    obj . direction = k;
    obj . speed = 1;
    obj . speedMax = counter;
    obj . image_blend = make_colour_hsv(map(i, 0, spawnNum, 0, 255), 180, 255);
    obj . pointX = pX;
    obj . pointY = pY;

}











/*var spawnAngle = irandom(360);
var spawnNum = 48; //was set 48
for (var i=0; i&lt;spawnNum; i++)
{
    /*only works with 3 petals (spawnNun needs to be multiplied by 4)
        1: 0,4,8,12,16,20,24,28,32,36,40,44,48
        2: 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,(49)
        3: 2,6,10,14,18,22,26,30,34,38,42,46,(50)
    */
    /*if (i % 2 == 0) 
    {
        if (i % 4 == 0) 
            counter = 1;
        else 
            counter = 2;
    } 
    else 
        counter = 1.5;
        
        
    var k = spawnAngle + i * (360 / spawnNum);
    var distance = 96;
    pX = 400 + lengthdir_x(distance,k);
    pY = 64 + lengthdir_y(distance,k);
    //var obj = instance_create(400+lengthdir_x(128,k),304+lengthdir_y(128,k),objFlowerEffTouhou);
    var obj = instance_create(pX,pY,objFlowerEffTouhou);
    obj . direction = k;
    obj . speed = 3;
    obj . speedMax = counter;
    obj . pointX = pX;
    obj . pointY = pY;

}
    /*if i &lt;= spawnNum
    {
        if i &gt; 5
        {
            if i mod 5 == 0 ds_list_add(p1, i);
            else if i mod 5 == 1 ds_list_add(p2, i);
            else if i mod 5 == 2 ds_list_add(p3, i);
            else if i mod 5 == 3 ds_list_add(p4, i);
            else if i mod 5 == 4 ds_list_add(p5, i);
        }
        else
        {
            if i - 5 == 0 ds_list_add(p1, i);
            else if i - 5 == -1 ds_list_add(p2, i);
            else if i - 5 == -2 ds_list_add(p3, i);
            else if i - 5 == -3 ds_list_add(p4, i);
            else if i - 5 == -4 ds_list_add(p5, i);
        }   
    }*/
    
/*
ds_list_destroy(p1);
ds_list_destroy(p2);
ds_list_destroy(p3);
ds_list_destroy(p4);
ds_list_destroy(p5);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Star Intro (Segment 0)
var obj = instance_create(416,160,objS0Transition_StarFG);
obj . tag = 0;

obj = instance_create(736,192,objS0Transition_StarFG);
obj . tag = 1;

obj = instance_create(416,512,objS0Transition_StarFG);
obj . tag = 2;

obj = instance_create(96,160,objS0Transition_StarFG);
obj . tag = 3;

obj = instance_create(128,448,objS0Transition_StarFG);
obj . tag = 4;

obj = instance_create(704,448,objS0Transition_StarFG);
obj . tag = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return the pause button and clean up the list
global.currentAvoidance = noone;
global.noPause = false; 


if attackS9_list != noone
{
    ds_list_destroy(attackS9_list);
    show_debug_message("A list created for -Segment 9- has been destroyed")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if attackS9_list != noone
    ds_list_destroy(attackS9_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw song's frames info (Debug) and the borders on top and bottom
if borders
{
    var col = make_colour_rgb(248, 137, 156);
    rect(0, 0, 800, 64, col, 1);
    rect(0, 544, 800, 608, col, 1);
}

/*if global.debugMode
{
    draw_set_halign(fa_right);
    draw_set_font(fntMenu4);
    //scrDrawTextOutline(768,16,"Step: "+string(t),c_black,c_white);
    draw_text_colour(768,16,"Step: "+string(t),c_black,c_black,c_black,c_black,1)
}*/



draw_set_colour(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Practice Info

if global.practiceMode
{
    var col = c_black;
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_font(fntPause1);
            
    // Put a text on top-center so you just not forget you're in PracticeMode and made a Wolsk moment
    draw_text_colour(400, 8, "Practice Mode", col, col, col, col, alphaText);
    
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
