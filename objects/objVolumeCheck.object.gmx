<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSystem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;

index = true;


alpha = 1;
scale = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play some SFX to let you know your current volume
audio_play_sound(sndShoot, 0, false);
alarm[0] = 50;

alpha = 1;
scale = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scrButtonPressed(global.upButton) or scrButtonPressed(global.downButton)
    index = !index;

if index = 1 // BGM Volume
{
    if (scrButtonHeld(global.menuLeftButton) &amp;&amp; global.soundVolume &gt; 0) 
        global.soundVolume -= 0.01;
    else if (scrButtonHeld(global.menuRightButton) &amp;&amp; global.soundVolume &lt; 1) 
        global.soundVolume += 0.01;
            
            
    global.soundVolume = clamp(global.soundVolume, 0, 1);
    audio_group_set_gain(ag_BGM, global.soundVolume, 0);
           
} 
else // SFX Volume
{
    if (scrButtonHeld(global.menuLeftButton) &amp;&amp; global.sfxVolume &gt; 0)
        global.sfxVolume -= 0.01;
    else if (scrButtonHeld(global.menuRightButton) &amp;&amp; global.sfxVolume &lt; 1) 
        global.sfxVolume += 0.01;
         
           
    global.sfxVolume = clamp(global.sfxVolume, 0, 1);
    audio_group_set_gain(ag_SFX, global.sfxVolume, 0);
}
if !instance_exists(objVolumeTransitionFade)
{
    if scrButtonPressed(global.jumpButton) or scrButtonPressed(global.shootButton)
    {
        ic(0,0,objVolumeTransitionFade);
        audio_play_sound(sndSelected, 1, false);
        alarm[0] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hover
alpha = lerp( alpha, 0, 0.1 );
scale = lerp( scale, 1, 0.1 );;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprSoundSign, 0, 400, 304-96);
repeat (4) {
draw_sprite_ext(sprSoundSign_AudioMove, 0, 400, 304-96,scale,scale,0,c_white,alpha); }

// Main text settings
scrDrawSettings(fntOptions,fa_center,fa_top,c_white,1);

scrDrawTextOutline(400,304+32,"Volume Check",c_black,c_white);

scrDrawSettings(fntNeosOptionDescription,fa_right,fa_bottom,c_white,1);
draw_text(800-8,608-8,'"Shift or Z" to continue')

scrDrawSettings(fntNeosOptionDescription,fa_left,fa_bottom,c_white,1);
draw_text(0+8,608-8,'"Left or Right" to change the volume')


// Volume Text
scrDrawSettings(fntPause2,fa_center,fa_top,c_white,1);

var c1 = c_white;
var c2 = c_white;
if index {c1 = c_yellow;}
else {c2 = c_yellow;}

draw_text_colour(400,450,string_interp("BGM Volume: {0}%", ceil(global.soundVolume * 100)),c1,c1,c1,c1,1);
draw_text_colour(400,480,string_interp("SFX Volume: {0}%", ceil(global.sfxVolume * 100)),c2,c2,c2,c2,1);

scrDrawSettings();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
