<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTrigger3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option = global.lastOptionSelected; //maybe replace for a global variable whose value is last selection
segmentsTotal = 9;
noTouch = true;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn particles on the ground

part_particles_create(global.pPracticeGroundSelect_System,x+4+irandom(40),y+104,global.pPracticeGroundSelect_Type,1);
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPlayer)
{
    if place_meeting(x,y,objPlayer)
    {
        noTouch = false;
        
        // Get keys
        var upKey = scrButtonPressed(global.upButton);
        var downKey = scrButtonPressed(global.downButton);
        var acceptKey = scrButtonPressed(global.jumpButton);
        var hitKey = scrButtonPressed(global.shootButton);
        
        // Up
        if upKey
        {
            if option &lt; 1
                option = segmentsTotal;
            else
                option--;
                
            audio_play_sound(sndMoveSelect, 0, false);
        }
        
        // Down
        if downKey
        {
            if option &gt; segmentsTotal-1
                option = 0;
            else
                option++;
                
            audio_play_sound(sndMoveSelect, 0, false);
        }
        
        // "shoot key" - Toggle HitMode
        if hitKey
            global.hitMode = !global.hitMode;
        
        // "jump key" - Accept
        if acceptKey
        {
            switch (option)
            {
                case 0: global.startPosition = 0; break;
                case 1: global.startPosition = 750; break;
                //case 1: global.startPosition = 1498; break;
                case 2: global.startPosition = 2406; break;
                case 3: global.startPosition = 3100; break;
                case 4: global.startPosition = 4500; break;
                case 5: global.startPosition = 5350; break;
                case 6: global.startPosition = 6062; break;
                case 7: global.startPosition = 7621; break;
                case 8: global.startPosition = 8373; break;
                case 9: global.startPosition = 9100; break;
            }
            // SFX and enable practice mode
            audio_play_sound(sndSelected, 0, false);
            global.practiceMode = true;
            
            //update global.lastOptionSelected and Save
            global.lastOptionSelected = option;
            global.startSegment = option;
            global.currentSegment = option;
            scrResetHitCount();
            
            
            scrSaveGame(true);
            
            //go to the practice boss room followed with the segment selected
            instance_destroy(objPlayer);
            room_goto(rMiku);
        }
    }
    else //if player isn't touching the object
    {    
        global.practiceMode = false;
        noTouch = true;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Screenshot of the current segment
if noTouch
    draw_sprite_ext(sprScreenShotSpoiler,0,1900,152,1,1,0,c_white,0.8);
else
    draw_sprite_ext(sprScreenShotArsenal,option,1900,152,1,1,0,c_white,0.8);

// Draw Screenshot Marker
draw_sprite_ext(sprScreenShotArsenalMarker,0,1900,152,1,1,0,c_white,0.9);

// Draw Marker
draw_sprite_ext(sprOptionSelector,0,1800,160+32*option,1,1,0,c_purple,0.8);
draw_sprite_ext(sprNeosSelection2,0,1800+16+dsin(current_time/5)*8,160+32*option,1,1,0,c_white,0.8);
draw_sprite_ext(sprNeosSelection2,0,1800-16-dsin(current_time/5)*8,160+32*option,1,1,180,c_white,0.8);


// Text Settings
scrDrawSettings(fntPause1, fa_center, fa_middle, c_black, 1);
if !noTouch
{
    if global.hitMode
        draw_text(room_width-400,114,"- HPMode Enabled -");
    else
        draw_text(room_width-400,114,"- HPMode Disabled -");
}

// Draw Numbers's Segments
for (i=0; i&lt;=segmentsTotal; i+=1)
{
    draw_text(1800,160+32*i,i);
}




// Draw text indicators
if !noTouch
{
    scrDrawSettings(fntNeosOptionDescription, fa_left, fa_bottom, c_black, 1);
    draw_text(1648,512,"Press 'Jump' to accept");
    scrDrawSettings(fntNeosOptionDescription, fa_right, fa_bottom, c_black, 1);
    draw_text(2352,512,"Press 'Shoot' to toggle Hitmode");
}

// Reset Value
scrDrawSettings();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ground

draw_sprite_ext(sprGradientTransparent,0,x,y+96,0.1,image_xscale*32,90,c_white,0.25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
