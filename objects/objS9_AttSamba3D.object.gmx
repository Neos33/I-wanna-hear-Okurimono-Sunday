<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCherryGlowAnimFinale</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited();

parent = noone;
dire = 0;
dist = 0;

direSPD = 1;
depth = 0;
image_speed = 0;

//test = -397;
test = 0;

targetX = 0;
pointX = 0

dirVertical = 0;
dirVertical_speed = -3;


tt = 0;
addX = 0;
addY = 0;

tag = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot to the center

var ss = ic(x,y,objS9_CherryNormalAttack);
ss . image_xscale = image_xscale;
ss . image_yscale = image_yscale;
ss . depth = depth+1;
ss . direction = point_direction(x,y,400,304);
ss . speed = point_distance(x,y,400,304)/70;
//ss . image_blend = image_blend;
//ss . image_blend = make_colour_hsv(image_index*(255/8),180,255);
ss . sprite_index = sprCherryFinaleD;
ss . image_index = image_index;
ss . drawStart = false;

ss . tag = tag;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pointX = xstart - parent.x; 
targetX = abs(parent.x - pointX); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if parent == noone { exit; }
else
{
    x = parent.x + addX + lengthdir_x( dist, dire+test ); //+test
    y = parent.y + addY + lengthdir_y( dist/2.5, dire+dirVertical );
    //var auto = 6;
    dire += direSPD;
    dirVertical += dirVertical_speed;
    test = dist;
    dist = min(295,dist+1); //ACTIVATE THIS
    //dist = 290 + scrTOscillate(20, 100, 0);
    tt++;

    image_xscale = abs(1+dsin(dire+dist)*(targetX-parent.x+test)/(dist*2));
    image_xscale = clamp(image_xscale, 0, 1);
    image_yscale = image_xscale;
    image_alpha = image_xscale;
    
    depth = -abs(floor(image_xscale*10));
}

/*if keyboard_check(vk_up) test++;
if keyboard_check(vk_down) test--;

if keyboard_check_pressed(vk_control) show_debug_message(test)*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
//event_inherited();

//draw_sprite_ext(sprCherrySolid2,0,x,y,image_xscale,image_yscale,9,c_white,image_alpha);
draw_set_blend_mode(bm_add);
//draw_sprite_ext(sprCherrySolid2,0,x,y,image_xscale,image_yscale,9,c_white,image_alpha);
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
